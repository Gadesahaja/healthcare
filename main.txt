import concurrent.futures
import logging
from core.communication import connect_to_device, execute_command
from core.file_transfer import transfer_file
from core.email_alert import send_email
from core.scraper import scrape_data
from core.error_handling import setup_logging
import csv

setup_logging()

def load_patient_data():
    with open('data/patients_data.csv', mode='r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            yield row

def main():
    # Load patient data from CSV
    patient_data = load_patient_data()
    
    # Example tasks: sending email alerts, device communication, scraping, etc.
    with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:
        for patient in patient_data:
            ip = patient['device_ip']
            executor.submit(connect_to_device, ip, 'username', 'password')

if __name__ == '__main__':
    main()
